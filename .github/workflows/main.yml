name: Main

on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  packages: write
  contents: read

env:
  AWS_REGION: ap-southeast-2
  AWS_ACCOUNT: ${{ vars.AWS_ACCOUNT }}

jobs:

  devbox:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.14.0

      - name: Run arbitrary commands
        run: devbox run -- echo "done!"

      - name: Run arbitrary commands
        run: devbox run -- java -version

#      - name: Run a script called test
#        run: devbox run test

  aws:
    runs-on: ubuntu-latest

    if: contains('refs/heads/main', github.ref)

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Check environment
        run: |
          env

      - name: Configure AWS credentials
        if: ${{ !env.ACT }}
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure AWS credentials
        if: ${{ env.ACT }}
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Sts - GetCallerIdentity
        run: |
          aws --no-cli-pager sts get-caller-identity

      - name: Lambda - List Functions
        run: |
          aws --no-cli-pager lambda list-functions

  native:

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm' # See 'Options' for all available distributions
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Example step
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version

  gradle:
    needs: aws

    if: contains('refs/heads/main', github.ref)

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        if: ${{ !env.ACT }}
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure AWS credentials
        if: ${{ env.ACT }}
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure Docker access
        if: ${{ env.ACT }}
        run: |
          sudo chown runner:docker /var/run/docker.sock
          docker ps

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3.5.0

      - name: Execute Gradle - BuildNativeLambda
        run: ./gradlew --console=plain :app:buildNativeLambda

      - name: Execute Gradle - Test
        run: ./gradlew --console=plain :app:test

#      - name: Publish to GitHub Packages
#        if: ${{ !env.ACT }}
#        uses: gradle/gradle-build-action@v3.5.0
#        with:
#          arguments: --console=plain publish
#        env:
#          USERNAME: ${{ github.actor }}
#          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "21"

      - name: Install CDK
        run: |
          npm install -g aws-cdk

      - name: Check CDK
        run: |
          cd infra 
          cdk --version
          cdk diff
          cdk synth
          cdk deploy --require-approval never
